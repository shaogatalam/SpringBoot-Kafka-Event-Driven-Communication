server.port=9237
spring.application.name=notificationService

#Eureka properties
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.client.registerWithEureka=true
#eureka.client.fetchRegistry=true
#eureka.instance.preferIpAddress=true


#spring.kafka.consumer.bootstrap-servers: localhost:9092
#spring.kafka.consumer.group-id: myGroup
#spring.kafka.consumer.auto-offset-reset: earliest
#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
##spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.topic-json.name=javaguides_json




#spring.kafka.producer.bootstrap-servers: localhost:9092
#spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
## spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#
#spring.kafka.consumer.bootstrap-servers: localhost:9092
##spring.kafka.consumer.group-id: myGroup
#spring.kafka.consumer.auto-offset-reset: earliest
#spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
##spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.properties.spring.json.trusted.packages=basepkg.DTO

#spring.kafka.topic.name=order_create
#spring.kafka.topic-json.name=order_create
